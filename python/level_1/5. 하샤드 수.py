'''
문제 설명
양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 
예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 
자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.


제한 조건
x는 1 이상, 10000 이하인 정수입니다.



입출력 예 설명
입출력 예 #1
10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.

입출력 예 #2
12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.

입출력 예 #3
11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.

입출력 예 #4
13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.



해결 방법
1. x를 이터러블한 str로 바꾸고 for문으로 요소를 뽑아낸다
2. 뽑아낸 요소를 int로 바꾸어 모두 합한다
3. 합한 값이 x와 나누어 떨어지는지 확인한다
4. 결과를 불린 값으로 반환한다

'''


# 일반적인 for문을 이용할 경우
def solution(x):
    sum_x = 0

    for i in str(x):
        sum_x += int(i)

    return not bool(x % sum_x)


# 컴프리핸션을 이용할 경우
def solution(x):
    sum_x = sum([int(i) for i in str(x)])

    return not bool(x % sum_x)


# 깐지나게 코드를 한 줄만 치고 싶을 경우(가독성은 떨어짐)
def solution(x):
    return not bool(x % sum([int(i) for i in str(x)]))


'''
새롭게 알게된 점은 sum([list])을 이용하면 따로 변수를 만들지 않아도 
리스트 요소들의 합을 구해준다는 걸 알게되었다

나는 bool을 이용해 결과를 반환했지만 대부분 == 0 같은 조건으로 불린 값을 반환하더라. 
숫자 중에 0은 False, 그 외 나머지는 True 인 것을 알고 있다면 굳이 조건으로 값을 구하지 않아도 된다
'''
